apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  annotations:
    tilt.dev/down-policy: keep
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: client
  selector:
    app: redis

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-dep
  labels:
    app: redis
  annotations:
    tilt.dev/down-policy: keep
spec:
  serviceName: redis
  selector:
    matchLabels:
      app: redis # match spec.template.labels
  replicas: 1
  template:
    metadata:
      name: redis-pod
      labels:
        app: redis # match spec.selector.matchLabels
    spec:
      containers:
        - name: redis
          image: redis:6.2.4-alpine
          imagePullPolicy: "IfNotPresent"
          command: ["redis-server"]
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: "50m"
              memory: "50Mi"
          livenessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 3
          volumeMounts:
            # -  mountPath: /redis-master  # <- the config vol is mounted here
            #    name: config
            #    readOnly: true
            - name: data
              mountPath: "/data"
              readOnly: false
      # volumes:
      #   - name: config-redis
      #     configMap:
      #       name: redis-conf
      # items:
      # - key: redis-config
      # path: redis.conf
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        # storageClassName: ""
        resources:
          requests:
            storage: 110Mi
