apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-dep
  labels: # must match the service
    app: rails
spec:
  replicas: 2
  selector:
    matchLabels: # which pods are we deploying
      app: rails
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels: # must match service and replicaset matchlabel
        app: rails
    spec:
      # serviceAccountName: rails #<--- test access k8 cli in pod

      # initContainers:
      #   - name: migrations-check
      #     image: ndrean/rails-base
      #     args:
      #       - rails
      #       - db:abort_if_pending_migrations
      containers:
        - name: backend
          image: ndrean/rails-base
          imagePullPolicy: "Always"
          resources:
            limits:
              cpu: "150m"
              memory: "256Mi"
          command: ["bundle"]
          args: ["exec", "rails", "server", "-b", "0.0.0.0"]
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: config
            - secretRef:
                name: secrets
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000
              scheme: HTTP
              initialDelaySeconds: 60
              periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: rails-svc
  labels:
    app: rails
spec:
  selector:
    app: rails
  type: ClusterIP # default type
  ports:
    - protocol: TCP
      # port exposed by the service
      port: 3000
      # the port the app is listening on targetPort
      targetPort: 3000
      name: http
