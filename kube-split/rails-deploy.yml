apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-dep
  labels:
    app: rails-be
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rails-be
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: rails-be
    spec:
      containers:
        - name: backend
          image: ndrean/rails-pg-local:v0
          imagePullPolicy: "IfNotPresent"
          command: ["./prepare-db.sh"]
          # args: ["exec", "rails", "s", "-b", "0.0.0.0"]
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: env
          env:
            - name: POSTGRES_URL
              value: "postgresql://postgres:dockerpassword@pg:5432/ortkcbqt"
            - name: POSTGRES_PASSWORD
              value: "dockerpassword"
            - name: POSTGRES_HOST
              value: "pg"
            - name: RAILS_ENV
              value: "production"
            - name: NODE_ENV
              value: "production"
            - name: REDIS_CACHE
              value: "redis://user:tq4hBlYvIvq0uU7hYMOYS6ErQKsSA2N8@redis-13424.c258.us-east-1-4.ec2.cloud.redislabs.com:13424/1"
            - name: REDIS_SIDEKIQ
              value: "redis://user:tq4hBlYvIvq0uU7hYMOYS6ErQKsSA2N8@redis-13424.c258.us-east-1-4.ec2.cloud.redislabs.com:13424/0"

---
apiVersion: v1
kind: Service
metadata:
  name: rails-svc
  labels:
    app: rails-be
spec:
  selector:
    app: rails-be
  ports:
    - protocol: TCP
      # port exposed by the service
      port: 3000
      # the port the app is listening on targetPort
      targetPort: 3000
      name: http
