apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-nginx-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rails
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: rails
    spec:
      containers:
        - name: rails
          image: ndrean/rails-base
          command: ["bundle"]
          args: ["exec", "rails", "s", "-b", "0.0.0.0"]
          # resources:
          #   limits:
          #     cpu: "200m"
          #     memory: "256Mi"
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: env
          volumeMounts:
            - mountPath: /public
              name: www
        - name: nginx
          image: nginx:alpine
          command: ["nginx"]
          args: ["-g", "daemon off;"]
          # resources:
          #   limits:
          #     cpu: "50"
          #     memory: "50Mi"
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/ # mount nginx-conf volumn to /etc/nginx/conf.d/
              readOnly: true
              name: nginx-conf
            - mountPath: /usr/share/nginx/html
              name: www
      volumes:
        - name: www
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx/conf.d
            items:
              - key: myconfig.conf
                path: myconfig.conf # dig directory

---
apiVersion: v1
kind: Service
metadata:
  name: rails-sd-svc
  labels:
    app: rails
spec:
  type: NodePort
  selector:
    app: rails
  ports:
    - protocol: TCP
      # port exposed by the container
      port: 80
      # the port the app is listening on targetPort
      targetPort: 9000
      nodePort: 30000
      name: http
