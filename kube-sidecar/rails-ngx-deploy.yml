apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-nginx-deploy
  # labels:
  #   app: k8-rails
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rails
  template:
    metadata:
      labels:
        app: rails
    spec:
      containers:
        - name: rails
          image: ndrean/rails-remote:v1
          command: ["bundle"]
          args: ["exec", "rails", "s", "-b", "0.0.0.0"]
          ports:
            - containerPort: 3000
          # envFrom:
          #   - configMapRef:
          #       name: env
          env:
            - name: POSTGRES_URL
              value: "postgres://ortkcbqt:fhSBQrF3Dzl9WWA1FfRIjQmU7u3pBtTd@batyr.db.elephantsql.com/ortkcbqt"
            - name: RAILS_ENV
              value: "production"
            - name: NODE_ENV
              value: "production"
            - name: REDIS_CACHE
              value: "redis://user:tq4hBlYvIvq0uU7hYMOYS6ErQKsSA2N8@redis-13424.c258.us-east-1-4.ec2.cloud.redislabs.com:13424/1"
            - name: REDIS_SIDEKIQ
              value: "redis://user:tq4hBlYvIvq0uU7hYMOYS6ErQKsSA2N8@redis-13424.c258.us-east-1-4.ec2.cloud.redislabs.com:13424/0"
        - name: nginx
          image: ndrean/nginx-sd:v0
          command: ["nginx"]
          args: ["-g", "daemon off;"]
          ports:
            - containerPort: 9000
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 9000
          #   initialDelaySeconds: 300
          #   periodSeconds: 5
          #   timeoutSeconds: 2
          #   failureThreshold: 10
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 9000
          #   initialDelaySeconds: 300
          #   periodSeconds: 5
          #   timeoutSeconds: 2
          #   failureThreshold: 10
