#require 'prometheus_exporter/server'

# client allows instrumentation to send info to server
# require 'prometheus_exporter/client'
# require 'prometheus_exporter/instrumentation'

# bind is the address, on which the webserver will listen
# port is the port that will provide the /metrics route
# server = PrometheusExporter::Server::WebServer.new bind: 'localhost', port: 12345
# server.start


# wire up a default local client
# PrometheusExporter::Client.default = PrometheusExporter::LocalClient.new(collector: server.collector)


# this ensures basic process instrumentation metrics are added such as RSS and Ruby metrics
# PrometheusExporter::Instrumentation::Process.start(type: "my program", labels: {my_custom: "label for all process metrics"})

# gauge = PrometheusExporter::Metric::Gauge.new("rss", "used RSS for process")
# counter = PrometheusExporter::Metric::Counter.new("web_requests", "number of web requests")
# summary = PrometheusExporter::Metric::Summary.new("page_load_time", "time it took to load page")
# histogram = PrometheusExporter::Metric::Histogram.new("api_access_time", "time it took to call api")

# server.collector.register_metric(gauge)
# server.collector.register_metric(counter)
# server.collector.register_metric(summary)
# server.collector.register_metric(histogram)

# gauge.observe(get_rss)
# gauge.observe(get_rss)

# counter.observe(1, route: 'test/route')
# counter.observe(1, route: 'another/route')

# summary.observe(1.1)
# summary.observe(1.12)
# summary.observe(0.12)

# histogram.observe(0.2, api: 'twitter')

# # http://localhost:12345/metrics now returns all your metrics